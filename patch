commit 85da52e6fd159b1ef9a1b4ac4d36db0c78ab2ee3
Author: seniordev83 <denis.vasilev@yahoo.com>
Date:   Mon Mar 29 04:23:27 2021 +1000

    publicprofile nav updated

diff --git a/src/components/avatars/index.tsx b/src/components/avatars/index.tsx
new file mode 100644
index 0000000..0d97636
--- /dev/null
+++ b/src/components/avatars/index.tsx
@@ -0,0 +1,33 @@
+import React from 'react';
+import styled from 'styled-components';
+
+import SkeletonAvatar from './SkeletonAvatar';
+import style from './style.module.scss';
+
+export const AvatarBox = styled.div`
+  margin-left: 50px;
+  margin-top: 15px
+  margin-bottom: 15px;
+`;
+
+interface AvatarProps {
+  avatar: string;
+  mode: string;
+}
+
+const Avatar: React.FC<AvatarProps> = ({ avatar, mode }: AvatarProps) => {
+  return (
+    <>
+      <SkeletonAvatar />
+      <img
+        alt="avatar"
+        src={avatar}
+        width={mode === 'small' ? '44' : '80'}
+        height={mode === 'small' ? '44' : '80'}
+        className={style['clip-avatar-svg']}
+      />
+    </>
+  );
+};
+
+export default Avatar;
diff --git a/src/components/avatars/style.module.scss b/src/components/avatars/style.module.scss
new file mode 100644
index 0000000..4e993f4
--- /dev/null
+++ b/src/components/avatars/style.module.scss
@@ -0,0 +1,3 @@
+.clip-avatar-svg {
+  clip-path: url(#avatarClip);
+}
diff --git a/src/components/cards/AboutCard.tsx b/src/components/cards/AboutCard.tsx
index 5f13e2f..48593fe 100644
--- a/src/components/cards/AboutCard.tsx
+++ b/src/components/cards/AboutCard.tsx
@@ -52,6 +52,12 @@ const AboutCard: React.FC<IProps> = ({
     setAbout(aboutText);
   }, [aboutText]);
 
+  console.log('====>', mode, aboutText ? 'test' : 'no');
+
+  if (mode !== 'edit' && (aboutText === '' || aboutText === undefined)) {
+    return <></>;
+  }
+
   return (
     <>
       <IonCard className={styleWidget['overview']}>
diff --git a/src/components/cards/EducationCard/index.tsx b/src/components/cards/EducationCard/index.tsx
index e4001f9..9c6f464 100644
--- a/src/components/cards/EducationCard/index.tsx
+++ b/src/components/cards/EducationCard/index.tsx
@@ -111,6 +111,13 @@ const EducationCard: React.FC<IEducationProps> = ({
     setCurrentEducationDTO({ isEnabled: true, items: items });
   };
 
+  if (
+    !currentEducationDTO.isEnabled ||
+    (!isEditable && currentEducationDTO.items.length == 0)
+  ) {
+    return <></>;
+  }
+
   return (
     <>
       {educationDTO.isEnabled === true ? (
diff --git a/src/components/cards/ExperienceCard/Edit.tsx b/src/components/cards/ExperienceCard/Edit.tsx
index 7a23b8c..32dae52 100644
--- a/src/components/cards/ExperienceCard/Edit.tsx
+++ b/src/components/cards/ExperienceCard/Edit.tsx
@@ -12,7 +12,7 @@ import SmallTextInput from '../../inputs/SmallTextInput';
 import styled from 'styled-components';
 import { MODE, MyTextarea } from '../common';
 
-interface ExperienceCardEditProps {
+interface Props {
   experienceItem: ExperienceItem;
   handleChange: any;
   mode: MODE;
@@ -26,11 +26,11 @@ const Spacer = styled.div`
   padding: 5px;
 `;
 
-const ExperienceCardEdit: React.FC<ExperienceCardEditProps> = ({
+const ExperienceCardEdit: React.FC<Props> = ({
   experienceItem,
   handleChange,
   mode
-}: ExperienceCardEditProps) => {
+}: Props) => {
   return (
     <MyGrid>
       <IonRow>
diff --git a/src/components/cards/ExperienceCard/index.tsx b/src/components/cards/ExperienceCard/index.tsx
index 64cc5c1..88cf406 100644
--- a/src/components/cards/ExperienceCard/index.tsx
+++ b/src/components/cards/ExperienceCard/index.tsx
@@ -14,7 +14,6 @@ import { Guid } from 'guid-typescript';
 import ExperienceItem from './Item';
 import styleWidget from '../WidgetCards.module.scss';
 
-import styled from 'styled-components';
 import ExperienceCardEdit from './Edit';
 import { LinkStyleSpan, MyModal, ModalFooter, Divider, MODE } from '../common';
 
@@ -112,84 +111,81 @@ const ExperienceCard: React.FC<IExperienceProps> = ({
     setcurrentExperienceDTO({ isEnabled: true, items: items });
   };
 
+  if (
+    !experienceDTO.isEnabled ||
+    (!isEditable && currentExperienceDTO.items.length == 0)
+  ) {
+    return <></>;
+  }
+
   return (
     <>
-      {experienceDTO.isEnabled === true ? (
-        <>
-          <IonCard className={styleWidget['overview']}>
-            <IonCardHeader>
-              <IonGrid>
-                <IonRow className="ion-justify-content-between">
-                  <IonCol>
-                    <IonCardTitle>Experience</IonCardTitle>
-                  </IonCol>
-                  {isEditable ? (
-                    <IonCol size="auto">
-                      <LinkStyleSpan onClick={e => addItem()}>
-                        + Add Experience
-                      </LinkStyleSpan>
-                    </IonCol>
-                  ) : (
-                    ''
-                  )}
-                </IonRow>
-              </IonGrid>
-            </IonCardHeader>
-            <IonCardContent>
-              {currentExperienceDTO.items.map((x, i) => {
-                return (
-                  <div key={i}>
-                    <ExperienceItem
-                      experienceItem={x}
-                      handleChange={handleChange}
-                      updateFunc={saveChanges}
-                      editFunc={editItem}
-                      index={i}
-                      removeFunc={removeItem}
-                      isEditable={isEditable}
-                    />
-                    {i < currentExperienceDTO.items.length - 1 ? (
-                      <Divider />
-                    ) : (
-                      ''
-                    )}
-                  </div>
-                );
-              })}
-            </IonCardContent>
-          </IonCard>
-          <MyModal
-            onDidDismiss={() => setMode(MODE.NONE)}
-            isOpen={mode === MODE.EDIT || mode === MODE.ADD}
-            cssClass="my-custom-class"
-          >
-            <ExperienceCardEdit
-              experienceItem={editedItem}
-              handleChange={handleChange}
-              mode={mode}
-            />
-            <ModalFooter className="ion-no-border">
-              <IonRow className="ion-justify-content-around">
+      <IonCard className={styleWidget['overview']}>
+        <IonCardHeader>
+          <IonGrid>
+            <IonRow className="ion-justify-content-between">
+              <IonCol>
+                <IonCardTitle>Experience</IonCardTitle>
+              </IonCol>
+              {isEditable ? (
                 <IonCol size="auto">
-                  <IonButton fill="outline" onClick={cancel}>
-                    Cancel
-                  </IonButton>
-                  <IonButton
-                    onClick={() => {
-                      saveChanges(editedItem);
-                      setMode(MODE.NONE);
-                    }}
-                  >
-                    Save
-                  </IonButton>
+                  <LinkStyleSpan onClick={e => addItem()}>
+                    + Add Experience
+                  </LinkStyleSpan>
                 </IonCol>
-              </IonRow>
-            </ModalFooter>
-          </MyModal>
-        </>
-      ) : (
-        ''
-      )}
+              ) : (
+                ''
+              )}
+            </IonRow>
+          </IonGrid>
+        </IonCardHeader>
+        <IonCardContent>
+          {currentExperienceDTO.items.map((x, i) => {
+            return (
+              <div key={i}>
+                <ExperienceItem
+                  experienceItem={x}
+                  handleChange={handleChange}
+                  updateFunc={saveChanges}
+                  editFunc={editItem}
+                  index={i}
+                  removeFunc={removeItem}
+                  isEditable={isEditable}
+                />
+                {i < currentExperienceDTO.items.length - 1 ? <Divider /> : ''}
+              </div>
+            );
+          })}
+        </IonCardContent>
+      </IonCard>
+      <MyModal
+        onDidDismiss={() => setMode(MODE.NONE)}
+        isOpen={mode === MODE.EDIT || mode === MODE.ADD}
+        cssClass="my-custom-class"
+      >
+        <ExperienceCardEdit
+          experienceItem={editedItem}
+          handleChange={handleChange}
+          mode={mode}
+        />
+        <ModalFooter className="ion-no-border">
+          <IonRow className="ion-justify-content-around">
+            <IonCol size="auto">
+              <IonButton fill="outline" onClick={cancel}>
+                Cancel
+              </IonButton>
+              <IonButton
+                onClick={() => {
+                  saveChanges(editedItem);
+                  setMode(MODE.NONE);
+                }}
+              >
+                Save
+              </IonButton>
+            </IonCol>
+          </IonRow>
+        </ModalFooter>
+      </MyModal>
     </>
   );
 };
diff --git a/src/components/profile/ProfileComponent/index.tsx b/src/components/profile/ProfileComponent/index.tsx
index c95e395..2283df8 100644
--- a/src/components/profile/ProfileComponent/index.tsx
+++ b/src/components/profile/ProfileComponent/index.tsx
@@ -15,7 +15,7 @@ import EducationCard from '../../cards/EducationCard';
 import ExperienceCard from '../../cards/ExperienceCard';
 // import FollowersWidget from '../FollowersWidget';
 import FollowingList from '../FollowingList';
-import PublicProfileNav from '../PublicProfileNav';
+import PublicProfileTabs from '../PublicProfileTabs';
 import SocialProfiles from '../SocialProfiles';
 import ProfileBanner from '../ProfileBanner';
 import ProfileHeader from '../ProfileHeader';
@@ -95,7 +95,7 @@ const ProfileComponent: React.FC<IPropsSession> = ({
 
         {profile.basicDTO.isEnabled === true ? (
           <>
-            <PublicProfileNav
+            <PublicProfileTabs
               mode={mode}
               profile={profile}
               scrollToPosition={scrollToElement}
diff --git a/src/components/profile/PublicProfileNav/Loadable.js b/src/components/profile/PublicProfileTabs/Loadable.js
similarity index 100%
rename from src/components/profile/PublicProfileNav/Loadable.js
rename to src/components/profile/PublicProfileTabs/Loadable.js
diff --git a/src/components/profile/PublicProfileNav/index.tsx b/src/components/profile/PublicProfileTabs/index.tsx
similarity index 95%
rename from src/components/profile/PublicProfileNav/index.tsx
rename to src/components/profile/PublicProfileTabs/index.tsx
index 76e7869..fb21e29 100644
--- a/src/components/profile/PublicProfileNav/index.tsx
+++ b/src/components/profile/PublicProfileTabs/index.tsx
@@ -15,7 +15,7 @@ const Navigation = styled.div`
   top: 110px;
 `;
 
-const PublicProfileNav: React.FC<IProps> = ({
+const PublicProfileTabs: React.FC<IProps> = ({
   profile,
   scrollToPosition,
   mode
@@ -71,4 +71,4 @@ const PublicProfileNav: React.FC<IProps> = ({
   );
 };
 
-export default PublicProfileNav;
+export default PublicProfileTabs;
diff --git a/src/components/profile/PublicProfileNav/style.module.scss b/src/components/profile/PublicProfileTabs/style.module.scss
similarity index 100%
rename from src/components/profile/PublicProfileNav/style.module.scss
rename to src/components/profile/PublicProfileTabs/style.module.scss
diff --git a/src/components/profile/PublicProfileNav/test/index.spec.ts b/src/components/profile/PublicProfileTabs/test/index.spec.ts
similarity index 100%
rename from src/components/profile/PublicProfileNav/test/index.spec.ts
rename to src/components/profile/PublicProfileTabs/test/index.spec.ts
diff --git a/src/pages/ManagerPage/components/ProfileEditor/index.tsx b/src/pages/ManagerPage/components/ProfileEditor/index.tsx
index 94d8201..9e86cf6 100644
--- a/src/pages/ManagerPage/components/ProfileEditor/index.tsx
+++ b/src/pages/ManagerPage/components/ProfileEditor/index.tsx
@@ -21,20 +21,20 @@ const ProfileEditor: React.FC = () => {
   const [error, setError] = useState(false);
   const [userInfo, setUserInfo] = useState<ISessionItem>(defaultUserInfo);
   const [loaded, setloaded] = useState(false);
-  const [full_profile, setfull_profile] = useState(defaultFullProfile);
+  const [profile, setProfile] = useState(defaultFullProfile);
 
   const retriveProfile = async () => {
     let instance = UserService.GetUserSession();
     if (!instance || !instance.userToken) return;
     try {
-      let profile: ProfileDTO | undefined = await ProfileService.getFullProfile(
+      let res: ProfileDTO | undefined = await ProfileService.getFullProfile(
         instance.did
       );
-      if (profile) {
-        profile.basicDTO.isEnabled = true;
-        profile.experienceDTO.isEnabled = true;
-        profile.educationDTO.isEnabled = true;
-        setfull_profile(profile);
+      if (res) {
+        res.basicDTO.isEnabled = true;
+        res.experienceDTO.isEnabled = true;
+        res.educationDTO.isEnabled = true;
+        setProfile(res);
       }
     } catch (e) {
       setError(true);
@@ -76,12 +76,12 @@ const ProfileEditor: React.FC = () => {
             )}
             {!error && loaded && userInfo.tutorialStep === 4 ? (
               <>
-                {full_profile && full_profile.basicDTO && (
+                {profile && profile.basicDTO && (
                   <AboutCard
-                    aboutText={full_profile.basicDTO.about || ''}
+                    aboutText={profile.basicDTO.about || ''}
                     mode="edit"
                     update={async (nextAbout: string) => {
-                      const newBasicDTO = { ...full_profile.basicDTO };
+                      const newBasicDTO = { ...profile.basicDTO };
                       const userSession = UserService.GetUserSession();
                       if (userSession) {
                         newBasicDTO.did = userSession.did;
@@ -92,9 +92,9 @@ const ProfileEditor: React.FC = () => {
                     }}
                   />
                 )}
-                {full_profile && full_profile.educationDTO && (
+                {profile && profile.educationDTO && (
                   <EducationCard
-                    educationDTO={full_profile.educationDTO}
+                    educationDTO={profile.educationDTO}
                     updateFunc={async (educationItem: EducationItem) => {
                       await ProfileService.updateEducationProfile(
                         educationItem
@@ -108,9 +108,9 @@ const ProfileEditor: React.FC = () => {
                     isEditable={true}
                   />
                 )}
-                {full_profile && full_profile.experienceDTO && (
+                {profile && profile.experienceDTO && (
                   <ExperienceCard
-                    experienceDTO={full_profile.experienceDTO}
+                    experienceDTO={profile.experienceDTO}
                     updateFunc={async (experienceItem: ExperienceItem) => {
                       await ProfileService.updateExperienceProfile(
                         experienceItem
diff --git a/src/pages/PublicPage/components/FollowingList/Loadable.js b/src/pages/PublicPage/components/FollowingList/Loadable.js
new file mode 100644
index 0000000..627bcd7
--- /dev/null
+++ b/src/pages/PublicPage/components/FollowingList/Loadable.js
@@ -0,0 +1,10 @@
+/**
+ * Asynchronously loading the spinner component
+ */
+
+import React from 'react';
+import loadable from 'src/baseplate/loadable';
+
+export default loadable(() => import('./index'), {
+  fallback: <div>Loading..</div>
+});
diff --git a/src/pages/PublicPage/components/FollowingList/index.tsx b/src/pages/PublicPage/components/FollowingList/index.tsx
new file mode 100644
index 0000000..b5d4cfb
--- /dev/null
+++ b/src/pages/PublicPage/components/FollowingList/index.tsx
@@ -0,0 +1,330 @@
+import React, { useEffect, useState } from 'react';
+import {
+  IonGrid,
+  IonRow,
+  IonCol,
+  IonCard,
+  IonCardTitle,
+  IonCardHeader,
+  IonCardContent
+} from '@ionic/react';
+import styled from 'styled-components';
+import { Link } from 'react-router-dom';
+
+import {
+  IFollowingResponse,
+  IFollowingItem,
+  ProfileService,
+  IFollowerResponse
+} from 'src/services/profile.service';
+import { DidService } from 'src/services/did.service';
+import { alertError } from 'src/utils/notify';
+import styleCards from 'src/components/cards/WidgetCards.module.scss';
+import style from './style.module.scss';
+export interface IDidDocument {
+  id: string;
+  publicKey?: PublicKeyEntity[] | null;
+  verifiableCredential: VerifiableCredentialEntity[];
+  expires: string;
+}
+export interface PublicKeyEntity {
+  id: string;
+  type: string;
+  controller: string;
+}
+export interface VerifiableCredentialEntity {
+  id: string;
+  type?: string[] | null;
+  issuer: string;
+  issuanceDate: string;
+  expirationDate: string;
+  credentialSubject: CredentialSubject;
+}
+export interface CredentialSubject {
+  id: string;
+  name?: string | null;
+  email?: string | null;
+  avatar?: string | null;
+  birthdate?: string | null;
+}
+
+export interface AvatarCredential {
+  'content-type': string;
+  data: string;
+}
+
+interface FollowingsWidgetProps {
+  contacts: IFollowingResponse;
+  resolveUserFunc: any;
+  getLinkFunc: any;
+}
+
+const TruncatedSpan = styled.span`
+  white-space: nowrap;
+  overflow: hidden;
+  text-overflow: ellipsis;
+  display: block;
+  font-family: 'SF Pro Display';
+  font-size: 14px;
+  font-weight: normal;
+  font-stretch: normal;
+  font-style: normal;
+  line-height: 1.62;
+  letter-spacing: normal;
+  text-align: left;
+  color: #979797;
+`;
+
+const Name = styled.span`
+  font-family: 'SF Pro Display';
+  font-size: 16px;
+  font-weight: 600;
+  font-stretch: normal;
+  font-style: normal;
+  line-height: 1.56;
+  letter-spacing: normal;
+  text-align: left;
+  color: #27272e;
+`;
+
+const ViewAll = styled.span`
+  flex-grow: 0;
+  font-family: 'SF Pro Display';
+  font-size: 14px;
+  font-weight: bold;
+  font-stretch: normal;
+  font-style: normal;
+  line-height: normal;
+  letter-spacing: normal;
+  text-align: right;
+  color: #4c6fff;
+`;
+
+const FollowingWidget: React.FC<FollowingsWidgetProps> = ({
+  contacts,
+  resolveUserFunc,
+  getLinkFunc
+}: FollowingsWidgetProps) => {
+  return (
+    <IonCard className={styleCards['overview']}>
+      <IonCardHeader>
+        <IonGrid>
+          <IonRow className="ion-justify-content-between">
+            <IonCol size="6">
+              <IonCardTitle id="education">
+                Following ({contacts.get_following.items.length})
+              </IonCardTitle>
+            </IonCol>
+            <IonCol size="auto">
+              <ViewAll>View all</ViewAll>
+            </IonCol>
+          </IonRow>
+        </IonGrid>
+      </IonCardHeader>
+      <IonCardContent>
+        <IonGrid className={style['following-widget']}>
+          {contacts.get_following.items.map((item: IFollowingItem, index) => (
+            <IonRow key={index}>
+              <IonCol size="*">
+                <img
+                  className={style['thumbnail']}
+                  src={resolveUserFunc(item.did).image}
+                  alt="thumbnail"
+                />
+              </IonCol>
+              <IonCol size="7">
+                <Link to={getLinkFunc(item.did)}>
+                  <IonGrid>
+                    <IonRow>
+                      <Name>{resolveUserFunc(item.did).name}</Name>
+                    </IonRow>
+                    <IonRow>
+                      <TruncatedSpan>{item.did}</TruncatedSpan>
+                    </IonRow>
+                  </IonGrid>
+                </Link>
+              </IonCol>
+              {/* <IonCol size='3'>
+                    <IonButton size='small' onClick={() => unfollow(item.did)}>
+                      Unfollow
+                    </IonButton>
+                  </IonCol> */}
+            </IonRow>
+          ))}
+        </IonGrid>
+      </IonCardContent>
+    </IonCard>
+  );
+};
+
+const FollowingWidgetError: React.FC<any> = (props: any) => {
+  return (
+    <IonCard className={styleCards['overview']}>
+      <IonCardHeader>
+        <IonCardTitle id="education">Following</IonCardTitle>
+      </IonCardHeader>
+      <IonCardContent>The list of followings is not acessible</IonCardContent>
+    </IonCard>
+  );
+};
+
+export interface IError {
+  hasError: boolean;
+  errorDescription?: string;
+}
+
+interface IProps {
+  did: string;
+}
+
+const FollowingList: React.FC<IProps> = ({ did }: IProps) => {
+  const [listContacts, setListContacts] = useState<IFollowingResponse>({
+    get_following: { items: [] }
+  });
+  const [listFollowers, setListFollowers] = useState<IFollowerResponse>({
+    get_followers: { items: [] }
+  });
+  const [didFollow, setDidFollow] = useState('');
+  const [didDocuments, setDidDocuments] = useState<IDidDocument[]>([]);
+  const [error, setError] = useState<IError>({ hasError: false });
+
+  const follow = async () => {
+    let list: any = await ProfileService.addFollowing(didFollow);
+    setListContacts(list);
+  };
+
+  const reset = async () => {
+    let list: any = await ProfileService.resetFollowing();
+    setListContacts(list);
+  };
+
+  const resolveUserInfo = (did: string): any => {
+    let name: string | null = did;
+    let avatar: AvatarCredential | null;
+    let image: string = '';
+    didDocuments.forEach((didDoc: IDidDocument) => {
+      if (didDoc === undefined) return;
+
+      if (did === didDoc.id && didDoc.verifiableCredential !== undefined) {
+        didDoc.verifiableCredential.forEach(
+          (item: VerifiableCredentialEntity) => {
+            if (item.credentialSubject.name !== undefined) {
+              name = item.credentialSubject.name;
+            }
+            if (item.credentialSubject.avatar !== undefined) {
+              avatar = (item.credentialSubject
+                .avatar as unknown) as AvatarCredential;
+
+              let type = avatar['content-type'];
+              image = `data: ${type}; base64, ${avatar.data} `;
+            }
+          }
+        );
+      }
+    });
+
+    return { name: name, image: image };
+  };
+
+  const unfollow = async (did: string) => {
+    let list: any = await ProfileService.unfollow(did);
+    setListContacts(list);
+  };
+
+  const getLink = (did: string) => {
+    return '/did/' + did;
+  };
+
+  const getFollowersCount = (did: string): string => {
+    let val: string = '';
+    try {
+      if (
+        listFollowers.get_followers.items !== undefined &&
+        listFollowers.get_followers.items.length > 0
+      ) {
+        listFollowers.get_followers.items.forEach(item => {
+          if (item.did === did) {
+            val = item.followers.length.toString();
+          }
+        });
+      }
+    } catch (e) {}
+    return val;
+  };
+
+  const getPage = (error: IError) => {
+    if (error.hasError) {
+      return <FollowingWidgetError></FollowingWidgetError>;
+    } else {
+      return (
+        <FollowingWidget
+          contacts={listContacts}
+          resolveUserFunc={resolveUserInfo}
+          getLinkFunc={getLink}
+        />
+      );
+    }
+  };
+
+  const loadData = async (did: string) => {
+    let list: IFollowingResponse;
+    try {
+      list = await ProfileService.getFollowings(did);
+    } catch (e) {
+      console.log('Could not load users that you follow' + e);
+      list = { get_following: { items: [] } };
+      // setError({ hasError: true, errorDescription: 'Could not load users that you follow' });
+      alertError(null, 'Could not load users that you follow');
+    }
+
+    let listDids: string[] = [];
+    if (
+      list &&
+      list.get_following &&
+      list.get_following.items &&
+      list.get_following.items.length > 0
+    ) {
+      listDids = list.get_following.items.map(p => p.did);
+
+      if (
+        listContacts &&
+        listContacts.get_following &&
+        listContacts.get_following.items &&
+        listContacts.get_following.items.length !==
+          list.get_following.items.length
+      ) {
+        setListContacts(list);
+      }
+    }
+
+    try {
+      let followers = await ProfileService.getFollowers(listDids);
+      setListFollowers(followers as IFollowerResponse);
+    } catch (e) {
+      console.log('Could not retrieve your followers: ' + e);
+      alertError(null, 'Could not retrieve your followers');
+    }
+
+    let docs: IDidDocument[] = [];
+    await Promise.all(
+      listDids.map(async did => {
+        let doc = await DidService.getDidDocument(did);
+        docs.push(doc);
+      })
+    );
+
+    setDidDocuments(docs);
+  };
+
+  useEffect(() => {
+    (async () => {
+      if (did !== '') {
+        await loadData(did);
+      }
+    })();
+  }, [listContacts, did]);
+
+  return <div>{getPage(error)}</div>;
+};
+
+export default FollowingList;
diff --git a/src/pages/PublicPage/components/FollowingList/style.module.scss b/src/pages/PublicPage/components/FollowingList/style.module.scss
new file mode 100644
index 0000000..161b5e3
--- /dev/null
+++ b/src/pages/PublicPage/components/FollowingList/style.module.scss
@@ -0,0 +1,51 @@
+.following-widget {
+    ion-row {
+        align-items: center;
+    }
+
+    h1 {
+        text-align: left;
+        font-family: 'Open Sans', sans-serif;
+        font-size: 16px;
+        font-weight: bold;
+        color: #000000DE;
+        margin-left: 12px;
+    }
+
+    .verified {
+        margin: 0px 0px 3px 3px;
+        width:  14px;
+        height: 14px;
+    }
+
+    .thumbnail {
+        border-radius: 50%;
+        width: 32px;
+        height: 32px;
+    }
+
+    .name{
+        font-family: 'Open Sans', sans-serif;
+        font-size: 14px;
+        letter-spacing: 0.25px;
+        color: #00000099;
+    }
+
+    .number-followers {
+        font-family: 'Open Sans', sans-serif;
+        font-size: 11px;
+        letter-spacing: 0.2px;
+        color: #00000099;
+        opacity: 1;
+    }
+
+
+    .invite {
+        font-family: 'Open Sans', sans-serif;
+        font-size: 14px;
+        font-weight: 600;
+        letter-spacing: 0.13px;
+        color: #363291;
+        margin-left: 5px;
+    }
+}
\ No newline at end of file
diff --git a/src/pages/PublicPage/components/FollowingList/test/index.spec.ts b/src/pages/PublicPage/components/FollowingList/test/index.spec.ts
new file mode 100644
index 0000000..d5a002f
--- /dev/null
+++ b/src/pages/PublicPage/components/FollowingList/test/index.spec.ts
@@ -0,0 +1,3 @@
+/**
+ * All your component testcases
+ */
diff --git a/src/pages/PublicPage/components/ProfileBanner/Loadable.js b/src/pages/PublicPage/components/ProfileBanner/Loadable.js
new file mode 100644
index 0000000..627bcd7
--- /dev/null
+++ b/src/pages/PublicPage/components/ProfileBanner/Loadable.js
@@ -0,0 +1,10 @@
+/**
+ * Asynchronously loading the spinner component
+ */
+
+import React from 'react';
+import loadable from 'src/baseplate/loadable';
+
+export default loadable(() => import('./index'), {
+  fallback: <div>Loading..</div>
+});
diff --git a/src/pages/PublicPage/components/ProfileBanner/index.tsx b/src/pages/PublicPage/components/ProfileBanner/index.tsx
new file mode 100644
index 0000000..9683cf9
--- /dev/null
+++ b/src/pages/PublicPage/components/ProfileBanner/index.tsx
@@ -0,0 +1,74 @@
+import React from 'react';
+import styled from 'styled-components';
+import style from './style.module.scss';
+
+const Banner = styled.div`
+  display: flex;
+  position: sticky;
+  top: 0px;
+  height: 176px;
+  flex-direction: column;
+  justify-content: center;
+  align-items: center;
+  gap: 10px;
+  background-color: rgba(255, 110, 110, 1);
+  font-family: 'SF Pro Display';
+  font-size: 56px;
+  font-weight: bold;
+  font-stretch: normal;
+  font-style: normal;
+  line-height: 1;
+  letter-spacing: normal;
+  text-align: left;
+  color: #ffffff;
+  box-shadow: 0px 3px 3px #00000005;
+
+  margin-top: 0px;
+  width: 100%;
+  padding-bottom: 2px;
+`;
+
+const BannerEmpty = styled.div`
+  z-index: -10;
+  display: flex;
+  position: sticky;
+  top: 0px;
+  height: 166px;
+  flex-direction: column;
+  justify-content: center;
+  align-items: center;
+  gap: 10px;
+  background-color: none;
+  font-family: 'SF Pro Display';
+  font-size: 56px;
+  font-weight: bold;
+  font-stretch: normal;
+  font-style: normal;
+  line-height: 1;
+  letter-spacing: normal;
+  text-align: left;
+  color: #ffffff;
+  box-shadow: 0px 3px 3px #00000005;
+
+  margin-top: 0px;
+  width: 100%;
+  padding-bottom: 2px;
+`;
+
+interface IProps {
+  mode: string;
+}
+
+const ProfileBanner: React.FC<IProps> = ({ mode }: IProps) => {
+  return (
+    <>
+      {mode === 'sticky' ? (
+        <BannerEmpty className={style['banner']}></BannerEmpty>
+      ) : (
+        <Banner className={style['banner']}></Banner>
+      )}
+    </>
+  );
+};
+
+export default ProfileBanner;
diff --git a/src/pages/PublicPage/components/ProfileBanner/style.module.scss b/src/pages/PublicPage/components/ProfileBanner/style.module.scss
new file mode 100644
index 0000000..5ead55b
--- /dev/null
+++ b/src/pages/PublicPage/components/ProfileBanner/style.module.scss
@@ -0,0 +1,8 @@
+/** All your component stuyles */
+.banner {
+  box-shadow: 0px 3px 3px #00000005;
+  margin-top: 0px;
+  width: 100%;
+  position: 'sticky';
+  top: 0px;
+}
diff --git a/src/pages/PublicPage/components/ProfileComponent/Loadable.js b/src/pages/PublicPage/components/ProfileComponent/Loadable.js
new file mode 100644
index 0000000..627bcd7
--- /dev/null
+++ b/src/pages/PublicPage/components/ProfileComponent/Loadable.js
@@ -0,0 +1,10 @@
+/**
+ * Asynchronously loading the spinner component
+ */
+
+import React from 'react';
+import loadable from 'src/baseplate/loadable';
+
+export default loadable(() => import('./index'), {
+  fallback: <div>Loading..</div>
+});
diff --git a/src/pages/PublicPage/components/ProfileComponent/index.tsx b/src/pages/PublicPage/components/ProfileComponent/index.tsx
new file mode 100644
index 0000000..c6f3406
--- /dev/null
+++ b/src/pages/PublicPage/components/ProfileComponent/index.tsx
@@ -0,0 +1,157 @@
+import {
+  IonCol,
+  IonContent,
+  IonGrid,
+  IonRow,
+  IonCard,
+  IonCardTitle,
+  IonCardContent,
+  IonCardHeader
+} from '@ionic/react';
+import React, { useRef, useState } from 'react';
+
+import AboutCard from 'src/components/cards/AboutCard';
+import EducationCard from 'src/components/cards/EducationCard';
+import ExperienceCard from 'src/components/cards/ExperienceCard';
+// import FollowersWidget from '../FollowersWidget';
+import FollowingList from '../FollowingList';
+import PublicProfileTabs from '../PublicProfileTabs';
+import SocialProfiles from '../SocialProfiles';
+import ProfileBanner from '../ProfileBanner';
+import ProfileHeader from '../ProfileHeader';
+import style from './style.module.scss';
+
+interface IPropsSession {
+  profile: ProfileDTO;
+  sessionItem?: ISessionItem;
+  error: boolean;
+}
+
+const ProfileComponent: React.FC<IPropsSession> = ({
+  profile,
+  sessionItem,
+  error
+}: IPropsSession) => {
+  const [scrollTop, setScrollTop] = useState(0);
+  const [mode, setMode] = useState('normal');
+
+  const handleScroll = (e: any) => {
+    //if (e.detail.scrollTop - scrollTop > 10 || e.detail.scrollTop - scrollTop < -10)
+    setScrollTop(e.detail.scrollTop);
+    if (scrollTop > 176) setMode('sticky');
+    else {
+      setMode('normal');
+    }
+  };
+
+  const contentRef = useRef<HTMLIonContentElement | null>(null);
+  const aboutRef = useRef<HTMLDivElement | null>(null);
+  const experienceRef = useRef<HTMLDivElement | null>(null);
+  const educationRef = useRef<HTMLDivElement | null>(null);
+
+  const scrollToElement = (cardName: string) => {
+    let point: number = 0;
+    let adjust = 0;
+    if (scrollTop < 176) adjust = 292 - scrollTop;
+    else {
+      adjust = 260 - scrollTop;
+    }
+
+    if (cardName === 'about') {
+      point = 0;
+    }
+    if (cardName === 'experience') {
+      point = (experienceRef.current!.getBoundingClientRect().top -
+        adjust) as number;
+    }
+    if (cardName === 'education') {
+      point = (educationRef.current!.getBoundingClientRect().top -
+        adjust) as number;
+    }
+    contentRef.current && contentRef.current.scrollToPoint(0, point, 200);
+  };
+
+  return (
+    <>
+      <IonContent
+        ref={contentRef}
+        className={style['profilecomponent']}
+        scrollEvents={true}
+        onIonScroll={handleScroll}
+      >
+        <ProfileBanner mode={mode} />
+
+        <ProfileHeader
+          mode={mode}
+          profile={profile}
+          user={sessionItem as ISessionItem}
+          error={error}
+        />
+
+        {profile.basicDTO.isEnabled === true ? (
+          <>
+            <PublicProfileTabs
+              mode={mode}
+              profile={profile}
+              scrollToPosition={scrollToElement}
+            />
+            <IonGrid className={style['scroll']}>
+              <IonRow className="ion-justify-content-center">
+                <IonCol size="12">
+                  <IonGrid>
+                    <IonRow>
+                      <IonCol size="9">
+                        <div ref={aboutRef}>
+                          <AboutCard
+                            aboutText={profile.basicDTO.about}
+                            mode="read"
+                          />
+                        </div>
+                        <div ref={experienceRef}>
+                          <ExperienceCard
+                            experienceDTO={profile.experienceDTO}
+                            isEditable={false}
+                          />
+                        </div>
+                        <div ref={educationRef}>
+                          <EducationCard
+                            educationDTO={profile.educationDTO}
+                            isEditable={false}
+                          />
+                        </div>
+                      </IonCol>
+                      <IonCol size="3">
+                        <SocialProfiles />
+                        <FollowingList did={profile.basicDTO.did} />
+
+                        {/* FollowersWidget */}
+
+                        <IonCard className={style['overview']}>
+                          <IonCardHeader>
+                            <IonCardTitle>Followers</IonCardTitle>
+                          </IonCardHeader>
+
+                          <IonCardContent></IonCardContent>
+                        </IonCard>
+                      </IonCol>
+                    </IonRow>
+                  </IonGrid>
+                </IonCol>
+              </IonRow>
+            </IonGrid>
+          </>
+        ) : (
+          <IonGrid>
+            <IonRow className="ion-justify-content-center">
+              <IonCol size="auto">
+                The content of this profile is not currently viewable
+              </IonCol>
+            </IonRow>
+          </IonGrid>
+        )}
+      </IonContent>
+    </>
+  );
+};
+
+export default ProfileComponent;
diff --git a/src/pages/PublicPage/components/ProfileComponent/style.module.scss b/src/pages/PublicPage/components/ProfileComponent/style.module.scss
new file mode 100644
index 0000000..1ebea86
--- /dev/null
+++ b/src/pages/PublicPage/components/ProfileComponent/style.module.scss
@@ -0,0 +1,28 @@
+/** All your component stuyles */
+.profilecomponent {
+  min-height: 200px;
+  height: calc(100% - 83px);
+  background-color: white;
+  box-shadow: 0px 3px 3px #00000005;
+  border-radius: 19px 19px 0px 0px;
+}
+
+.fixed {
+  z-index: 1000;
+  width: calc(100%);
+  background-color: #f7fafc;
+  margin: none;
+  --ion-grid-padding: 0px;
+  transition: 0.2s;
+}
+
+.scroll {
+  width: 100%;
+  z-index: 100;
+  background-color: #f7fafc;
+
+}
+
+.dashboard {
+  background-color: rgb(206, 129, 28);
+}
diff --git a/src/pages/PublicPage/components/ProfileComponent/test/index.spec.ts b/src/pages/PublicPage/components/ProfileComponent/test/index.spec.ts
new file mode 100644
index 0000000..d5a002f
--- /dev/null
+++ b/src/pages/PublicPage/components/ProfileComponent/test/index.spec.ts
@@ -0,0 +1,3 @@
+/**
+ * All your component testcases
+ */
diff --git a/src/pages/PublicPage/components/ProfileHeader/Loadable.js b/src/pages/PublicPage/components/ProfileHeader/Loadable.js
new file mode 100644
index 0000000..627bcd7
--- /dev/null
+++ b/src/pages/PublicPage/components/ProfileHeader/Loadable.js
@@ -0,0 +1,10 @@
+/**
+ * Asynchronously loading the spinner component
+ */
+
+import React from 'react';
+import loadable from 'src/baseplate/loadable';
+
+export default loadable(() => import('./index'), {
+  fallback: <div>Loading..</div>
+});
diff --git a/src/pages/PublicPage/components/ProfileHeader/index.tsx b/src/pages/PublicPage/components/ProfileHeader/index.tsx
new file mode 100644
index 0000000..0e205df
--- /dev/null
+++ b/src/pages/PublicPage/components/ProfileHeader/index.tsx
@@ -0,0 +1,60 @@
+import React from 'react';
+import { IonGrid, IonRow, IonCol } from '@ionic/react';
+import { Link } from 'react-router-dom';
+
+import Avatar, { AvatarBox } from 'src/components/avatars';
+import style from './style.module.scss';
+import DidSnippet from 'src/components/DidSnippet';
+import defaultAdamAvatar from 'src/assets/icon/defaultAdamAvatar.png';
+import { ProfileName } from 'src/components/texts';
+import { FollowButton } from 'src/components/buttons';
+
+interface IProps {
+  profile: ProfileDTO;
+  user: ISessionItem;
+  error: boolean;
+  mode: string;
+}
+
+const ProfileHeader: React.FC<IProps> = ({
+  profile,
+  user,
+  mode,
+  error
+}: IProps) => {
+  return (
+    <IonGrid className={style['profileheadersticky']}>
+      <IonRow className={style['header']}>
+        <IonCol size="2">
+          <AvatarBox>
+            {user && user.avatar ? (
+              <Avatar avatar={user.avatar as string} mode="big" />
+            ) : (
+              <img src={defaultAdamAvatar} alt="default avatar" />
+            )}
+          </AvatarBox>
+        </IonCol>
+
+        <IonCol size="8">
+          <IonGrid>
+            <IonRow>
+              <ProfileName>{user ? user.name : ''}</ProfileName>
+            </IonRow>
+            <IonRow className="ion-justify-content-start">
+              <IonCol>
+                <DidSnippet did={user.did} />
+              </IonCol>
+            </IonRow>
+          </IonGrid>
+        </IonCol>
+        <IonCol size="2">
+          <Link to="/sign-did">
+            <FollowButton>View profile</FollowButton>
+          </Link>
+        </IonCol>
+      </IonRow>
+    </IonGrid>
+  );
+};
+
+export default ProfileHeader;
diff --git a/src/pages/PublicPage/components/ProfileHeader/style.module.scss b/src/pages/PublicPage/components/ProfileHeader/style.module.scss
new file mode 100644
index 0000000..d945eea
--- /dev/null
+++ b/src/pages/PublicPage/components/ProfileHeader/style.module.scss
@@ -0,0 +1,24 @@
+.profileheadersticky {
+  background-color: white;
+  position: sticky;
+  position: -webkit-sticky;
+  top: 0;
+  z-index: 99;
+  padding: 20px;
+
+  // .clip-avatar-svg {
+  //   clip-path: url(#avatarClip);
+  // }
+
+  // .profile-img {
+  //   max-width: 5.5em;
+  //   border: 3px solid var(--theme-primary-blue);
+  //   border-radius: 1.5em 2em 1.5em 2em;
+  //   padding: 3px;
+  // }
+
+  // .view-profile-btn {
+  //   display: flex;
+  //   justify-content: flex-end;
+  // }
+}
diff --git a/src/pages/PublicPage/components/ProfileHeader/test/index.spec.ts b/src/pages/PublicPage/components/ProfileHeader/test/index.spec.ts
new file mode 100644
index 0000000..d5a002f
--- /dev/null
+++ b/src/pages/PublicPage/components/ProfileHeader/test/index.spec.ts
@@ -0,0 +1,3 @@
+/**
+ * All your component testcases
+ */
diff --git a/src/pages/PublicPage/components/PublicProfileTabs/Loadable.js b/src/pages/PublicPage/components/PublicProfileTabs/Loadable.js
new file mode 100644
index 0000000..627bcd7
--- /dev/null
+++ b/src/pages/PublicPage/components/PublicProfileTabs/Loadable.js
@@ -0,0 +1,10 @@
+/**
+ * Asynchronously loading the spinner component
+ */
+
+import React from 'react';
+import loadable from 'src/baseplate/loadable';
+
+export default loadable(() => import('./index'), {
+  fallback: <div>Loading..</div>
+});
diff --git a/src/pages/PublicPage/components/PublicProfileTabs/index.tsx b/src/pages/PublicPage/components/PublicProfileTabs/index.tsx
new file mode 100644
index 0000000..fb21e29
--- /dev/null
+++ b/src/pages/PublicPage/components/PublicProfileTabs/index.tsx
@@ -0,0 +1,74 @@
+import React, { useState } from 'react';
+import { IonList, IonLabel, IonItem } from '@ionic/react';
+import styled from 'styled-components';
+
+import style from './style.module.scss';
+
+interface IProps {
+  profile: ProfileDTO;
+  scrollToPosition: any;
+  mode: string;
+}
+
+const Navigation = styled.div`
+  position: sticky;
+  top: 110px;
+`;
+
+const PublicProfileTabs: React.FC<IProps> = ({
+  profile,
+  scrollToPosition,
+  mode
+}: IProps) => {
+  const [active, setActive] = useState('about');
+
+  return (
+    <Navigation
+      className={mode === 'normal' ? style['normal'] : style['sticky']}
+    >
+      <IonList className={style['tab-list']}>
+        <IonItem
+          className={
+            (active === 'about' ? style['tab-active'] : '') +
+            ' ' +
+            style['tab-item']
+          }
+          onClick={() => {
+            setActive('about');
+            scrollToPosition('about');
+          }}
+        >
+          <IonLabel className={style['tab-label']}>About</IonLabel>
+        </IonItem>
+        <IonItem
+          className={
+            (active === 'experience' ? style['tab-active'] : '') +
+            ' ' +
+            style['tab-item']
+          }
+          onClick={() => {
+            setActive('experience');
+            scrollToPosition('experience');
+          }}
+        >
+          <IonLabel className={style['tab-label']}>Experience</IonLabel>
+        </IonItem>
+        <IonItem
+          className={
+            (active === 'education' ? style['tab-active'] : '') +
+            ' ' +
+            style['tab-item']
+          }
+          onClick={() => {
+            setActive('education');
+            scrollToPosition('education');
+          }}
+        >
+          <IonLabel className={style['tab-label']}>Education</IonLabel>
+        </IonItem>
+      </IonList>
+    </Navigation>
+  );
+};
+
+export default PublicProfileTabs;
diff --git a/src/pages/PublicPage/components/PublicProfileTabs/style.module.scss b/src/pages/PublicPage/components/PublicProfileTabs/style.module.scss
new file mode 100644
index 0000000..72ef651
--- /dev/null
+++ b/src/pages/PublicPage/components/PublicProfileTabs/style.module.scss
@@ -0,0 +1,76 @@
+/** All your component stuyles */
+
+/** All your component stuyles */
+    //background: #f7fafc;
+
+
+
+    
+.normal{
+  z-index:100;
+
+  .tab-grid {
+    background: #f7fafc;
+    
+  }
+  .tab-list {
+    background: #f7fafc;
+    padding-left:15px
+  }
+  .tab-item {
+    cursor: pointer;
+    --border-color: #f7fafc;
+    --inner-border-width: 0 0 2px 0;
+    display: inline-block;
+    --background: #f7fafc;
+    --inner-padding-bottom: 0.5em;
+    font-weight: 600;
+    color: #718096;
+  }
+  .tab-active {
+    --border-color: var(--theme-primary-blue);
+    color: #1a202c;
+  }
+  .tab-label {
+    font-family: 'SF Pro Display';
+    margin-top: 10px !important;
+    margin-bottom: 10px !important;
+    margin-left:10px;
+  }
+}
+
+.sticky {
+  box-shadow: 0 1px 8px 0 rgba(0, 0, 0, 0.1);
+  z-index:100;
+  .tab-grid {
+    background: white;
+    
+  }
+  .tab-list {
+    background: white;
+    padding: 0px 0px 0px 15px;
+  }
+  .tab-item {
+    cursor: pointer;
+    --border-color: white;
+    --inner-border-width: 0 0 2px 0;
+    display: inline-block;
+    --background: white;
+    --inner-padding-bottom: 0 !important;
+    
+    font-weight: 600;
+    color: #718096;
+  }
+  .tab-active {
+    --border-color: var(--theme-primary-blue);
+    color: #1a202c;
+  }
+  .tab-label {
+    font-family: 'SF Pro Display';
+    margin-top: 0px !important;
+    margin-bottom: 0px !important;
+    margin-left:10px;
+    font-size: 14px;
+  }
+
+}
\ No newline at end of file
diff --git a/src/pages/PublicPage/components/PublicProfileTabs/test/index.spec.ts b/src/pages/PublicPage/components/PublicProfileTabs/test/index.spec.ts
new file mode 100644
index 0000000..d5a002f
--- /dev/null
+++ b/src/pages/PublicPage/components/PublicProfileTabs/test/index.spec.ts
@@ -0,0 +1,3 @@
+/**
+ * All your component testcases
+ */
diff --git a/src/pages/PublicPage/components/SocialProfiles/Loadable.js b/src/pages/PublicPage/components/SocialProfiles/Loadable.js
new file mode 100644
index 0000000..627bcd7
--- /dev/null
+++ b/src/pages/PublicPage/components/SocialProfiles/Loadable.js
@@ -0,0 +1,10 @@
+/**
+ * Asynchronously loading the spinner component
+ */
+
+import React from 'react';
+import loadable from 'src/baseplate/loadable';
+
+export default loadable(() => import('./index'), {
+  fallback: <div>Loading..</div>
+});
diff --git a/src/pages/PublicPage/components/SocialProfiles/index.tsx b/src/pages/PublicPage/components/SocialProfiles/index.tsx
new file mode 100644
index 0000000..f97f394
--- /dev/null
+++ b/src/pages/PublicPage/components/SocialProfiles/index.tsx
@@ -0,0 +1,121 @@
+import React from 'react';
+import {
+  IonCardHeader,
+  IonCardTitle,
+  IonCard,
+  IonCardContent,
+  IonGrid,
+  IonCol,
+  IonRow
+} from '@ionic/react';
+import styled from 'styled-components';
+
+import style from 'src/components/cards/WidgetCards.module.scss';
+
+import facebook from '../../../../assets/icon/Facebook.svg';
+import twitter from '../../../../assets/icon/Twitter.svg';
+import google from '../../../../assets/icon/Google.svg';
+import linkedin from '../../../../assets/icon/Linkedin.svg';
+
+const FacebookIcon: React.FC = () => {
+  const FacebookImageTag = styled.img`
+    width: 18px;
+    height: 18px;
+  `;
+
+  return (
+    <IonGrid>
+      <IonRow>
+        <IonCol size="auto">
+          <FacebookImageTag src={facebook} alt="facebook icon" />
+        </IonCol>
+        <IonCol size="*">Facebook</IonCol>
+      </IonRow>
+    </IonGrid>
+  );
+};
+
+const TwitterIcon: React.FC = () => {
+  const TwitterImageTag = styled.img`
+    width: 18px;
+    height: 18px;
+  `;
+
+  return (
+    <IonGrid>
+      <IonRow>
+        <IonCol size="auto">
+          <TwitterImageTag src={twitter} alt="twitter icon" />
+        </IonCol>
+        <IonCol size="*">Twitter</IonCol>
+      </IonRow>
+    </IonGrid>
+  );
+};
+
+const GoogleIcon: React.FC = () => {
+  const GoogleImageTag = styled.img`
+    width: 18px;
+    height: 18px;
+  `;
+
+  return (
+    <IonGrid>
+      <IonRow>
+        <IonCol size="auto">
+          <GoogleImageTag src={google} alt="google icon" />
+        </IonCol>
+        <IonCol size="*">Google</IonCol>
+      </IonRow>
+    </IonGrid>
+  );
+};
+
+const LinkedinIcon: React.FC = () => {
+  const LinkedinImageTag = styled.img`
+    width: 18px;
+    height: 18px;
+  `;
+
+  return (
+    <IonGrid>
+      <IonRow>
+        <IonCol size="auto">
+          <LinkedinImageTag src={linkedin} alt="linkedin icon" />
+        </IonCol>
+        <IonCol size="*">Linkedin</IonCol>
+      </IonRow>
+    </IonGrid>
+  );
+};
+
+const SocialProfiles: React.FC = () => {
+  return (
+    <IonCard className={style['overview']}>
+      <IonCardHeader>
+        <IonCardTitle>Social Profiles</IonCardTitle>
+      </IonCardHeader>
+
+      <IonCardContent>
+        <IonGrid>
+          <IonRow>
+            <IonCol size="6">
+              <FacebookIcon />{' '}
+            </IonCol>
+            <IonCol size="6">
+              <TwitterIcon />
+            </IonCol>
+            <IonCol size="6">
+              <GoogleIcon />
+            </IonCol>
+            <IonCol size="6">
+              <LinkedinIcon />
+            </IonCol>
+          </IonRow>
+        </IonGrid>
+      </IonCardContent>
+    </IonCard>
+  );
+};
+
+export default SocialProfiles;
diff --git a/src/pages/PublicPage/components/SocialProfiles/style.scss b/src/pages/PublicPage/components/SocialProfiles/style.scss
new file mode 100644
index 0000000..e0e52ad
--- /dev/null
+++ b/src/pages/PublicPage/components/SocialProfiles/style.scss
@@ -0,0 +1,4 @@
+/** All your component stuyles */
+.socialprofiles{
+
+}
\ No newline at end of file
diff --git a/src/pages/PublicPage/components/SocialProfiles/test/index.spec.ts b/src/pages/PublicPage/components/SocialProfiles/test/index.spec.ts
new file mode 100644
index 0000000..d5a002f
--- /dev/null
+++ b/src/pages/PublicPage/components/SocialProfiles/test/index.spec.ts
@@ -0,0 +1,3 @@
+/**
+ * All your component testcases
+ */
diff --git a/src/pages/PublicPage/index.tsx b/src/pages/PublicPage/index.tsx
index c1a5e5a..19f0839 100644
--- a/src/pages/PublicPage/index.tsx
+++ b/src/pages/PublicPage/index.tsx
@@ -3,7 +3,7 @@ import { RouteComponentProps } from 'react-router';
 import React, { useEffect, useState } from 'react';
 import styled from 'styled-components';
 
-import ProfileComponent from 'src/components/profile/ProfileComponent';
+import ProfileComponent from './components/ProfileComponent';
 import { UserService } from 'src/services/user.service';
 import PageLoading from 'src/components/layouts/PageLoading';
 import {
@@ -40,13 +40,14 @@ const PublicPage: React.FC<RouteComponentProps<MatchParams>> = (
 ) => {
   const [error, setError] = useState(false);
   const [loading, setLoading] = useState(true);
+  const [signedIn, setSignedIn] = useState(false);
   const [publicUser, setPublicUser] = useState<ISessionItem>(defaultUserInfo);
   const [publicUserProfile, setPublicUserProfile] = useState(
     defaultFullProfile
   );
-  const [signedIn, setSignedIn] = useState(false);
 
   let did: string = props.match.params.did;
+
   useEffect(() => {
     (async () => {
       try {
